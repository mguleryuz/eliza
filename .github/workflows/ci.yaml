name: ci

on:
    push:
      tags:
        - 'v[0-9]+.[0-9]+.[0-9]+-dev.[0-9]+'
        - 'v[0-9]+.[0-9]+.[0-9]+'
    workflow_dispatch:

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: recursive # This ensures submodules are checked out

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Image Tag and Repository Name
        id: set-vars
        run: |
          # Set tag based on ref type and pattern
          if [[ "${GITHUB_REF}" == *"-dev"* ]]; then
            echo "tag=dev" >> $GITHUB_OUTPUT
          else
            echo "tag=prod" >> $GITHUB_OUTPUT
          fi
          # Get repository name from package.json
          REPO_NAME=$(node -p "require('./package.json').name")
          echo "repository=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names ${{ steps.set-vars.outputs.repository }} || \
          aws ecr create-repository --repository-name ${{ steps.set-vars.outputs.repository }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.set-vars.outputs.repository }}
          IMAGE_TAG: ${{ steps.set-vars.outputs.tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
